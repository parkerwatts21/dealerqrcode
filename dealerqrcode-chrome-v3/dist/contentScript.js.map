{"version":3,"file":"contentScript.js","sources":["../src/contentScript.tsx"],"sourcesContent":["// Immediately log that the content script has loaded\n(function initContentScript() {\n  console.log('[DealerQR] Content script loaded');\n  \n  let widgetContainer: HTMLDivElement | null = null;\n  let popupContainer: HTMLDivElement | null = null;\n  let isWidgetInitialized = false;\n  \n  // Create and inject widget styles\n  const injectStyles = () => {\n    try {\n      console.log('[DealerQR] Attempting to inject styles');\n      const existingStyle = document.getElementById('dealerqrcode-styles');\n      if (existingStyle) {\n        console.log('[DealerQR] Styles already exist');\n        return;\n      }\n  \n      const styleSheet = document.createElement('style');\n      styleSheet.id = 'dealerqrcode-styles';\n      styleSheet.textContent = `\n        #dealerqrcode-button {\n          position: fixed;\n          bottom: 24px;\n          right: 24px;\n          width: 56px;\n          height: 56px;\n          border-radius: 28px;\n          background: linear-gradient(135deg, #2563eb, #1e40af);\n          color: white;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          cursor: pointer;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n          z-index: 2147483647;\n          transition: all 0.2s ease;\n          border: none;\n          outline: none;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n          font-size: 24px;\n        }\n        \n        #dealerqrcode-button::before {\n          content: '';\n          position: absolute;\n          inset: -3px;\n          background: linear-gradient(135deg, #3b82f6, #1e40af);\n          border-radius: 31px;\n          z-index: -1;\n          opacity: 0;\n          transition: opacity 0.2s ease;\n        }\n        \n        #dealerqrcode-button:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n        }\n        \n        #dealerqrcode-button:hover::before {\n          opacity: 1;\n        }\n        \n        #dealerqrcode-button.dragging {\n          cursor: grabbing;\n          transform: scale(1.1);\n          box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);\n        }\n        \n        #dealerqrcode-button svg {\n          width: 28px;\n          height: 28px;\n          fill: currentColor;\n        }\n\n        #dealerqrcode-popup {\n          position: absolute;\n          bottom: calc(100% + 16px);\n          left: 50%;\n          transform: translateX(-50%);\n          width: 600px;\n          height: 800px;\n          background: white;\n          border-radius: 12px;\n          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n          z-index: 2147483646;\n          display: none;\n          overflow: hidden;\n        }\n\n        #dealerqrcode-popup::before {\n          content: '';\n          position: absolute;\n          bottom: -8px;\n          left: 50%;\n          transform: translateX(-50%);\n          width: 16px;\n          height: 16px;\n          background: white;\n          transform-origin: center;\n          transform: translateX(-50%) rotate(45deg);\n          box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.1);\n          z-index: -1;\n        }\n\n        #dealerqrcode-popup iframe {\n          width: 100%;\n          height: 100%;\n          border: none;\n        }\n\n        .dealerqrcode-wrapper {\n          position: fixed;\n          z-index: 2147483647;\n        }\n      `;\n      document.head.appendChild(styleSheet);\n      console.log('[DealerQR] Styles injected successfully');\n    } catch (error) {\n      console.error('[DealerQR] Failed to inject styles:', error);\n    }\n  };\n  \n  // Create widget\n  const createWidget = () => {\n    try {\n      console.log('[DealerQR] Creating widget');\n      const existingWidget = document.getElementById('dealerqrcode-wrapper');\n      if (existingWidget) {\n        console.log('[DealerQR] Widget already exists');\n        widgetContainer = existingWidget.querySelector('#dealerqrcode-button') as HTMLDivElement;\n        popupContainer = existingWidget.querySelector('#dealerqrcode-popup') as HTMLDivElement;\n        return;\n      }\n\n      // Create wrapper for both button and popup\n      const wrapper = document.createElement('div');\n      wrapper.className = 'dealerqrcode-wrapper';\n      wrapper.style.bottom = '24px';\n      wrapper.style.right = '24px';\n  \n      // Create button\n      widgetContainer = document.createElement('div');\n      widgetContainer.id = 'dealerqrcode-button';\n      widgetContainer.innerHTML = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path d=\"M3 3h6v6H3V3zm2 2v2h2V5H5zm8-2h6v6h-6V3zm2 2v2h2V5h-2zM3 13h6v6H3v-6zm2 2v2h2v-2H5zm13-2h3v2h-3v3h-2v-3h-3v-2h3v-3h2v3h3zm-3 7h6v2h-6z\"/>\n        </svg>\n      `;\n\n      // Create popup container\n      popupContainer = document.createElement('div');\n      popupContainer.id = 'dealerqrcode-popup';\n      \n      // Add iframe to popup\n      const iframe = document.createElement('iframe');\n      iframe.src = chrome.runtime.getURL('popup.html');\n      popupContainer.appendChild(iframe);\n\n      // Add both to wrapper\n      wrapper.appendChild(widgetContainer);\n      wrapper.appendChild(popupContainer);\n      \n      // Make the wrapper draggable\n      let isDragging = false;\n      let startX: number;\n      let startY: number;\n      let initialLeft: number;\n      let initialTop: number;\n\n      const onMouseDown = (e: MouseEvent) => {\n        isDragging = true;\n        widgetContainer?.classList.add('dragging');\n        \n        // Get initial mouse position\n        startX = e.clientX;\n        startY = e.clientY;\n        \n        // Get initial widget position\n        const rect = wrapper.getBoundingClientRect();\n        initialLeft = rect.left;\n        initialTop = rect.top;\n        \n        // Prevent text selection during drag\n        e.preventDefault();\n      };\n\n      const onMouseMove = (e: MouseEvent) => {\n        if (!isDragging) return;\n        \n        // Calculate the distance moved\n        const deltaX = e.clientX - startX;\n        const deltaY = e.clientY - startY;\n        \n        // Calculate new position\n        let newLeft = initialLeft + deltaX;\n        let newTop = initialTop + deltaY;\n        \n        // Keep within window bounds\n        const maxX = window.innerWidth - wrapper.offsetWidth;\n        const maxY = window.innerHeight - wrapper.offsetHeight;\n        \n        newLeft = Math.min(Math.max(0, newLeft), maxX);\n        newTop = Math.min(Math.max(0, newTop), maxY);\n        \n        // Apply new position\n        wrapper.style.left = `${newLeft}px`;\n        wrapper.style.top = `${newTop}px`;\n      };\n\n      const onMouseUp = () => {\n        isDragging = false;\n        widgetContainer?.classList.remove('dragging');\n      };\n\n      // Add event listeners for drag\n      widgetContainer?.addEventListener('mousedown', onMouseDown);\n      document.addEventListener('mousemove', onMouseMove);\n      document.addEventListener('mouseup', onMouseUp);\n      \n      // Add click handler to toggle popup\n      let clickStartTime: number;\n      widgetContainer?.addEventListener('mousedown', () => {\n        clickStartTime = Date.now();\n      });\n      \n      widgetContainer?.addEventListener('mouseup', () => {\n        const clickDuration = Date.now() - clickStartTime;\n        if (clickDuration < 200 && !isDragging && popupContainer) {\n          const isVisible = popupContainer.style.display === 'block';\n          popupContainer.style.display = isVisible ? 'none' : 'block';\n        }\n      });\n      \n      // Update styles for better dragging\n      const styles = document.createElement('style');\n      styles.textContent = `\n        .dealerqrcode-wrapper {\n          position: fixed;\n          z-index: 2147483647;\n          transition: none;\n          touch-action: none;\n          user-select: none;\n        }\n        \n        #dealerqrcode-button {\n          cursor: grab;\n        }\n        \n        #dealerqrcode-button.dragging {\n          cursor: grabbing;\n          transform: scale(1.1);\n          box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);\n        }\n      `;\n      document.head.appendChild(styles);\n      \n      // Set initial position if not already set\n      if (!wrapper.style.left && !wrapper.style.top) {\n        wrapper.style.right = '24px';\n        wrapper.style.bottom = '24px';\n      }\n      \n      document.body.appendChild(wrapper);\n      console.log('[DealerQR] Widget created and added to page');\n      \n    } catch (error) {\n      console.error('[DealerQR] Failed to create widget:', error);\n    }\n  };\n  \n  // Initialize widget\n  const initWidget = () => {\n    try {\n      console.log('[DealerQR] Initializing widget');\n      if (!isWidgetInitialized) {\n        injectStyles();\n        createWidget();\n        isWidgetInitialized = true;\n      }\n      \n      if (widgetContainer) {\n        widgetContainer.style.display = 'flex';\n        console.log('[DealerQR] Widget displayed');\n      }\n    } catch (error) {\n      console.error('[DealerQR] Failed to initialize widget:', error);\n    }\n  };\n  \n  // Listen for messages\n  chrome.runtime.onMessage.addListener((message, _sender, sendResponse) => {\n    console.log('[DealerQR] Message received:', message);\n    \n    try {\n      if (message.action === 'ping') {\n        console.log('[DealerQR] Ping received');\n        sendResponse({ status: 'alive' });\n        return true;\n      }\n      \n      if (message.action === 'toggleWidget') {\n        console.log('[DealerQR] Toggle widget requested');\n        if (!isWidgetInitialized) {\n          initWidget();\n        } else if (widgetContainer) {\n          widgetContainer.style.display = widgetContainer.style.display === 'none' ? 'flex' : 'none';\n          if (popupContainer) {\n            popupContainer.style.display = 'none';\n          }\n          console.log('[DealerQR] Widget visibility toggled to:', widgetContainer.style.display);\n        }\n        sendResponse({ success: true });\n        return true;\n      }\n    } catch (error: unknown) {\n      console.error('[DealerQR] Error handling message:', error);\n      sendResponse({ \n        success: false, \n        error: error instanceof Error ? error.message : 'An unknown error occurred'\n      });\n      return true;\n    }\n  });\n  \n  // Initialize immediately\n  console.log('[DealerQR] Content script initialization complete');\n})(); "],"names":[],"mappings":"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"}